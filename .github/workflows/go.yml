# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Go

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  build-project:
    name: Build project
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.22'
    
    - name: Get Dependencies
      run: go get github.com/CycloneDX/cyclonedx-go
      
    - name: Build
      run: go build ./cmd/dotnetbomcleaner/

    - name: Upload executable
      uses: actions/upload-artifact@v4
      with:
        name: dotnetbomcleaner
        path: ./dotnetbomcleaner
        compression-level: 0
  release-project:
    name: Release project
    runs-on: ubuntu-latest
    needs: build-project
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: dotnetbomcleaner

      - name: Test artifact download
        run: ls -R

      - name: Create Release
        id: create-new-release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v0.${{ github.run_number }}.0
          release_name: v0.${{ github.run_number }}.0

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create-new-release.outputs.upload_url }}
          asset_path: ./dotnetbomcleaner
          asset_name: dotnetbomcleaner
